{"ast":null,"code":"var _jsxFileName = \"/home/aditya/Projects/AttendanceSystem/app-frontend/src/Login.js\";\nimport React, { useState, useContext } from \"react\";\nimport { useGrpcRequest } from \"./useGrpcHook\";\nimport { ClientContext } from \"./index\";\n\nconst {\n  RecordsRequest,\n  RecordsResponse\n} = require(\"./AttendancePodsInterface_pb\");\n\nconst {\n  StudentRecordsServiceClient\n} = require(\"./AttendancePodsInterface_grpc_web_pb\");\n/**\n * Notes:\n *  - Password as of right now has no value. Need to implement on server-side.\n *  - handleLogin() sets the state.\n *  const {EchoRequest, EchoResponse} = require('./echo_pb.js');\n const {EchoServiceClient} = require('./echo_grpc_web_pb.js');\n\n var echoService = new EchoServiceClient('http://localhost:8080');\n\n var request = new EchoRequest();\n request.setMessage('Hello World!');\n\n echoService.echo(request, {}, function(err, response) {\n  // ...\n});\n */\n\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      room: '',\n      password: '',\n      isLoggedIn: false,\n      studentsList: []\n    };\n    this.handleRoomChange = this.handleRoomChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleLogin = this.handleLogin.bind(this);\n  }\n\n  handleRoomChange(event) {\n    this.setState({\n      room: event.target.value\n    });\n  }\n\n  handlePasswordChange(event) {\n    this.setState({\n      password: event.target.value\n    });\n  }\n\n  handleLogin(event) {\n    event.preventDefault();\n  }\n\n  render() {\n    const [input, setInput] = useState(this.state.room);\n    const client = useContext(ClientContext);\n\n    const newRecordsRequest = async ({\n      room\n    }) => {\n      const request = new RecordsRequest();\n      request.setRoom(room);\n      return await client.getPeriodRecords(request, {});\n    };\n\n    const [data, error, loading, refetch] = useGrpcRequest(newRecordsRequest, {\n      room: this.state.room\n    }, []);\n\n    const handleSubmit = () => refetch({\n      room: this.state.room\n    });\n\n    if (error) {\n      console.error(error);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, loading ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \" Retrying...\") : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Error: \", error.message, \" \"));\n    } else {\n      console.log(data);\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \" AYYYY YYFYFYFY\"), React.createElement(\"form\", {\n      onSubmit: handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Room:\", React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.room,\n      onChange: this.handleRoomChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Password:\", React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.password,\n      onChange: this.handlePasswordChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/home/aditya/Projects/AttendanceSystem/app-frontend/src/Login.js"],"names":["React","useState","useContext","useGrpcRequest","ClientContext","RecordsRequest","RecordsResponse","require","StudentRecordsServiceClient","Login","Component","constructor","props","state","room","password","isLoggedIn","studentsList","handleRoomChange","bind","handlePasswordChange","handleLogin","event","setState","target","value","preventDefault","render","input","setInput","client","newRecordsRequest","request","setRoom","getPeriodRecords","data","error","loading","refetch","handleSubmit","console","message","log"],"mappings":"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","sourcesContent":["import React, {useState, useContext} from \"react\";\nimport {useGrpcRequest} from \"./useGrpcHook\";\nimport {ClientContext} from \"./index\";\nconst {RecordsRequest, RecordsResponse} = require(\"./AttendancePodsInterface_pb\");\nconst {StudentRecordsServiceClient} = require(\"./AttendancePodsInterface_grpc_web_pb\");\n\n\n/**\n * Notes:\n *  - Password as of right now has no value. Need to implement on server-side.\n *  - handleLogin() sets the state.\n *  const {EchoRequest, EchoResponse} = require('./echo_pb.js');\n const {EchoServiceClient} = require('./echo_grpc_web_pb.js');\n\n var echoService = new EchoServiceClient('http://localhost:8080');\n\n var request = new EchoRequest();\n request.setMessage('Hello World!');\n\n echoService.echo(request, {}, function(err, response) {\n  // ...\n});\n */\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      room: '',\n      password: '',\n      isLoggedIn: false,\n      studentsList: [],\n    };\n    this.handleRoomChange = this.handleRoomChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleLogin = this.handleLogin.bind(this);\n  }\n\n  handleRoomChange(event) {\n    this.setState({room: event.target.value});\n  }\n\n  handlePasswordChange(event) {\n    this.setState({password: event.target.value});\n  }\n\n  handleLogin(event) {\n\n\n    event.preventDefault();\n  }\n\n  render() {\n    const [input, setInput] = useState(this.state.room);\n    const client = useContext(ClientContext);\n\n    const newRecordsRequest = async ({room}) => {\n      const request = new RecordsRequest();\n      request.setRoom(room);\n      return await client.getPeriodRecords(request, {});\n    };\n\n    const [data, error, loading, refetch] = useGrpcRequest(newRecordsRequest, {room: this.state.room}, []);\n    const handleSubmit = () => refetch({room: this.state.room});\n    if (error) {\n      console.error(error);\n      return (\n        <div>\n          {loading ? <div> Retrying...</div> : <div>Error: {error.message} </div>}\n        </div>\n      );\n    } else {\n      console.log(data);\n    }\n\n    return (\n      <div>\n        <p> AYYYY YYFYFYFY</p>\n        <form onSubmit={handleSubmit}>\n          <label>\n            Room:\n            <input type=\"text\" value={this.state.room} onChange={this.handleRoomChange} />\n          </label>\n          <br/>\n          <label>\n            Password:\n            <input type=\"text\" value={this.state.password} onChange={this.handlePasswordChange} />\n          </label>\n          <br/>\n          <input type=\"submit\" value=\"Submit\" />\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}