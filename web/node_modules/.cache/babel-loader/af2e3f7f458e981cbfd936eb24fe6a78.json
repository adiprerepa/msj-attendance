{"ast":null,"code":"var _jsxFileName = \"/home/aditya/Projects/AttendanceSystem/app-frontend/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nclass LoginComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loggedIn: false,\n      room: '',\n      password: '',\n      err: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleLogin = this.handleLogin.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      room: event.target.room,\n      password: event.target.password,\n      loggedIn: false,\n      err: false\n    });\n  }\n\n  handleLogin(event) {\n    alert('lmao' + this.state.room + this.state.password);\n    event.preventDefault();\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      onSubmit: this.handleLogin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"Room:\", React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.room,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }));\n  }\n\n}\n\nReactDOM.render(React.createElement(LoginComponent, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 48\n  },\n  __self: this\n}), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/home/aditya/Projects/AttendanceSystem/app-frontend/src/index.js"],"names":["React","ReactDOM","App","serviceWorker","LoginComponent","Component","constructor","props","state","loggedIn","room","password","err","handleChange","bind","handleLogin","event","setState","target","alert","preventDefault","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;;AAEA,MAAMC,cAAN,SAA6BJ,KAAK,CAACK,SAAnC,CAA6C;AAEzCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,KADD;AAETC,MAAAA,IAAI,EAAE,EAFG;AAGTC,MAAAA,QAAQ,EAAE,EAHD;AAITC,MAAAA,GAAG,EAAE;AAJI,KAAb;AAMA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBD,IAAjB,CAAsB,IAAtB,CAAnB;AACH;;AAEDD,EAAAA,YAAY,CAACG,KAAD,EAAQ;AAChB,SAAKC,QAAL,CAAc;AACVP,MAAAA,IAAI,EAAEM,KAAK,CAACE,MAAN,CAAaR,IADT;AAEVC,MAAAA,QAAQ,EAAEK,KAAK,CAACE,MAAN,CAAaP,QAFb;AAGVF,MAAAA,QAAQ,EAAE,KAHA;AAIVG,MAAAA,GAAG,EAAE;AAJK,KAAd;AAMH;;AAEDG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACfG,IAAAA,KAAK,CAAC,SAAS,KAAKX,KAAL,CAAWE,IAApB,GAA2B,KAAKF,KAAL,CAAWG,QAAvC,CAAL;AACAK,IAAAA,KAAK,CAACI,cAAN;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,WACI;AAAM,MAAA,QAAQ,EAAE,KAAKN,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAEI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAE,KAAKP,KAAL,CAAWE,IAArC;AAA2C,MAAA,QAAQ,EAAE,KAAKG,YAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,EAKI;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,CADJ;AASH;;AAtCwC;;AAyC7CZ,QAAQ,CAACoB,MAAT,CAAgB,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAoCC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAApC,E,CAEA;AACA;AACA;;AACApB,aAAa,CAACqB,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nclass LoginComponent extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            loggedIn: false,\n            room: '',\n            password: '',\n            err: false,\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleLogin = this.handleLogin.bind(this);\n    }\n\n    handleChange(event) {\n        this.setState({\n            room: event.target.room,\n            password: event.target.password,\n            loggedIn: false,\n            err: false,\n        })\n    }\n\n    handleLogin(event) {\n        alert('lmao' + this.state.room + this.state.password);\n        event.preventDefault()\n    }\n\n    render() {\n        return (\n            <form onSubmit={this.handleLogin}>\n                <label>\n                    Room:\n                    <input type=\"text\" value={this.state.room} onChange={this.handleChange} />\n                </label>\n                <input type=\"submit\" value=\"Submit\" />\n            </form>\n        )\n    }\n}\n\nReactDOM.render(<LoginComponent />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}