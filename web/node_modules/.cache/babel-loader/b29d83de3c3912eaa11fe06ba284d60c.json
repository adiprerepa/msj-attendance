{"ast":null,"code":"/**\n * @fileoverview\n * @enhanceable\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\nvar jspb = require('google-protobuf');\n\nvar goog = jspb;\nvar global = Function('return this')();\ngoog.exportSymbol('proto.AttendanceRecord', null, global);\ngoog.exportSymbol('proto.AttendanceResponse', null, global);\ngoog.exportSymbol('proto.RecordsRequest', null, global);\ngoog.exportSymbol('proto.RecordsResponse', null, global);\ngoog.exportSymbol('proto.RegisterRoomRequest', null, global);\ngoog.exportSymbol('proto.RegisterRoomResponse', null, global);\ngoog.exportSymbol('proto.Student', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\nproto.RegisterRoomRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.RegisterRoomRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  proto.RegisterRoomRequest.displayName = 'proto.RegisterRoomRequest';\n}\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto suitable for use in Soy templates.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n   *     for transitional soy proto support: http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.RegisterRoomRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.RegisterRoomRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Whether to include the JSPB\n   *     instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.RegisterRoomRequest} msg The msg instance to transform.\n   * @return {!Object}\n   */\n\n\n  proto.RegisterRoomRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      room: jspb.Message.getField(msg, 1)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.RegisterRoomRequest}\n */\n\n\nproto.RegisterRoomRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.RegisterRoomRequest();\n  return proto.RegisterRoomRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.RegisterRoomRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.RegisterRoomRequest}\n */\n\n\nproto.RegisterRoomRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setRoom(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.RegisterRoomRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.RegisterRoomRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.RegisterRoomRequest} message\n * @param {!jspb.BinaryWriter} writer\n */\n\n\nproto.RegisterRoomRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f =\n  /** @type {string} */\n  jspb.Message.getField(message, 1);\n\n  if (f != null) {\n    writer.writeString(1, f);\n  }\n};\n/**\n * required string room = 1;\n * @return {string}\n */\n\n\nproto.RegisterRoomRequest.prototype.getRoom = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.RegisterRoomRequest.prototype.setRoom = function (value) {\n  jspb.Message.setField(this, 1, value);\n};\n\nproto.RegisterRoomRequest.prototype.clearRoom = function () {\n  jspb.Message.setField(this, 1, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\n\n\nproto.RegisterRoomRequest.prototype.hasRoom = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.RegisterRoomResponse = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.RegisterRoomResponse, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  proto.RegisterRoomResponse.displayName = 'proto.RegisterRoomResponse';\n}\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto suitable for use in Soy templates.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n   *     for transitional soy proto support: http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.RegisterRoomResponse.prototype.toObject = function (opt_includeInstance) {\n    return proto.RegisterRoomResponse.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Whether to include the JSPB\n   *     instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.RegisterRoomResponse} msg The msg instance to transform.\n   * @return {!Object}\n   */\n\n\n  proto.RegisterRoomResponse.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      status: jspb.Message.getField(msg, 1)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.RegisterRoomResponse}\n */\n\n\nproto.RegisterRoomResponse.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.RegisterRoomResponse();\n  return proto.RegisterRoomResponse.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.RegisterRoomResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.RegisterRoomResponse}\n */\n\n\nproto.RegisterRoomResponse.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {number} */\n        reader.readInt32();\n        msg.setStatus(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.RegisterRoomResponse.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.RegisterRoomResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.RegisterRoomResponse} message\n * @param {!jspb.BinaryWriter} writer\n */\n\n\nproto.RegisterRoomResponse.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f =\n  /** @type {number} */\n  jspb.Message.getField(message, 1);\n\n  if (f != null) {\n    writer.writeInt32(1, f);\n  }\n};\n/**\n * required int32 status = 1;\n * @return {number}\n */\n\n\nproto.RegisterRoomResponse.prototype.getStatus = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 1, 0)\n  );\n};\n/** @param {number} value */\n\n\nproto.RegisterRoomResponse.prototype.setStatus = function (value) {\n  jspb.Message.setField(this, 1, value);\n};\n\nproto.RegisterRoomResponse.prototype.clearStatus = function () {\n  jspb.Message.setField(this, 1, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\n\n\nproto.RegisterRoomResponse.prototype.hasStatus = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.RecordsRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.RecordsRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  proto.RecordsRequest.displayName = 'proto.RecordsRequest';\n}\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto suitable for use in Soy templates.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n   *     for transitional soy proto support: http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.RecordsRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.RecordsRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Whether to include the JSPB\n   *     instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.RecordsRequest} msg The msg instance to transform.\n   * @return {!Object}\n   */\n\n\n  proto.RecordsRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      room: jspb.Message.getField(msg, 1)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.RecordsRequest}\n */\n\n\nproto.RecordsRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.RecordsRequest();\n  return proto.RecordsRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.RecordsRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.RecordsRequest}\n */\n\n\nproto.RecordsRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setRoom(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.RecordsRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.RecordsRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.RecordsRequest} message\n * @param {!jspb.BinaryWriter} writer\n */\n\n\nproto.RecordsRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f =\n  /** @type {string} */\n  jspb.Message.getField(message, 1);\n\n  if (f != null) {\n    writer.writeString(1, f);\n  }\n};\n/**\n * required string room = 1;\n * @return {string}\n */\n\n\nproto.RecordsRequest.prototype.getRoom = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.RecordsRequest.prototype.setRoom = function (value) {\n  jspb.Message.setField(this, 1, value);\n};\n\nproto.RecordsRequest.prototype.clearRoom = function () {\n  jspb.Message.setField(this, 1, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\n\n\nproto.RecordsRequest.prototype.hasRoom = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.RecordsResponse = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.RecordsResponse.repeatedFields_, null);\n};\n\ngoog.inherits(proto.RecordsResponse, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  proto.RecordsResponse.displayName = 'proto.RecordsResponse';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.RecordsResponse.repeatedFields_ = [1];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto suitable for use in Soy templates.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n   *     for transitional soy proto support: http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.RecordsResponse.prototype.toObject = function (opt_includeInstance) {\n    return proto.RecordsResponse.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Whether to include the JSPB\n   *     instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.RecordsResponse} msg The msg instance to transform.\n   * @return {!Object}\n   */\n\n\n  proto.RecordsResponse.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      studentsList: jspb.Message.toObjectList(msg.getStudentsList(), proto.Student.toObject, includeInstance)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.RecordsResponse}\n */\n\n\nproto.RecordsResponse.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.RecordsResponse();\n  return proto.RecordsResponse.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.RecordsResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.RecordsResponse}\n */\n\n\nproto.RecordsResponse.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto.Student();\n        reader.readMessage(value, proto.Student.deserializeBinaryFromReader);\n        msg.addStudents(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.RecordsResponse.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.RecordsResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.RecordsResponse} message\n * @param {!jspb.BinaryWriter} writer\n */\n\n\nproto.RecordsResponse.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getStudentsList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(1, f, proto.Student.serializeBinaryToWriter);\n  }\n};\n/**\n * repeated Student students = 1;\n * If you change this array by adding, removing or replacing elements, or if you\n * replace the array itself, then you must call the setter to update it.\n * @return {!Array.<!proto.Student>}\n */\n\n\nproto.RecordsResponse.prototype.getStudentsList = function () {\n  return (\n    /** @type{!Array.<!proto.Student>} */\n    jspb.Message.getRepeatedWrapperField(this, proto.Student, 1)\n  );\n};\n/** @param {!Array.<!proto.Student>} value */\n\n\nproto.RecordsResponse.prototype.setStudentsList = function (value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n/**\n * @param {!proto.Student=} opt_value\n * @param {number=} opt_index\n * @return {!proto.Student}\n */\n\n\nproto.RecordsResponse.prototype.addStudents = function (opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.Student, opt_index);\n};\n\nproto.RecordsResponse.prototype.clearStudentsList = function () {\n  this.setStudentsList([]);\n};\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.Student = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.Student, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  proto.Student.displayName = 'proto.Student';\n}\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto suitable for use in Soy templates.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n   *     for transitional soy proto support: http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.Student.prototype.toObject = function (opt_includeInstance) {\n    return proto.Student.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Whether to include the JSPB\n   *     instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.Student} msg The msg instance to transform.\n   * @return {!Object}\n   */\n\n\n  proto.Student.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      studentId: jspb.Message.getField(msg, 1),\n      name: jspb.Message.getField(msg, 2)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Student}\n */\n\n\nproto.Student.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Student();\n  return proto.Student.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Student} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Student}\n */\n\n\nproto.Student.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setStudentId(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setName(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.Student.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.Student.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Student} message\n * @param {!jspb.BinaryWriter} writer\n */\n\n\nproto.Student.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f =\n  /** @type {string} */\n  jspb.Message.getField(message, 1);\n\n  if (f != null) {\n    writer.writeString(1, f);\n  }\n\n  f =\n  /** @type {string} */\n  jspb.Message.getField(message, 2);\n\n  if (f != null) {\n    writer.writeString(2, f);\n  }\n};\n/**\n * required string student_id = 1;\n * @return {string}\n */\n\n\nproto.Student.prototype.getStudentId = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.Student.prototype.setStudentId = function (value) {\n  jspb.Message.setField(this, 1, value);\n};\n\nproto.Student.prototype.clearStudentId = function () {\n  jspb.Message.setField(this, 1, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\n\n\nproto.Student.prototype.hasStudentId = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * required string name = 2;\n * @return {string}\n */\n\n\nproto.Student.prototype.getName = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.Student.prototype.setName = function (value) {\n  jspb.Message.setField(this, 2, value);\n};\n\nproto.Student.prototype.clearName = function () {\n  jspb.Message.setField(this, 2, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\n\n\nproto.Student.prototype.hasName = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.AttendanceRecord = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.AttendanceRecord, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  proto.AttendanceRecord.displayName = 'proto.AttendanceRecord';\n}\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto suitable for use in Soy templates.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n   *     for transitional soy proto support: http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.AttendanceRecord.prototype.toObject = function (opt_includeInstance) {\n    return proto.AttendanceRecord.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Whether to include the JSPB\n   *     instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.AttendanceRecord} msg The msg instance to transform.\n   * @return {!Object}\n   */\n\n\n  proto.AttendanceRecord.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      room: jspb.Message.getField(msg, 1),\n      fingerId: jspb.Message.getField(msg, 2),\n      studentId: jspb.Message.getField(msg, 3)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.AttendanceRecord}\n */\n\n\nproto.AttendanceRecord.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.AttendanceRecord();\n  return proto.AttendanceRecord.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.AttendanceRecord} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.AttendanceRecord}\n */\n\n\nproto.AttendanceRecord.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setRoom(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setFingerId(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setStudentId(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.AttendanceRecord.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.AttendanceRecord.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.AttendanceRecord} message\n * @param {!jspb.BinaryWriter} writer\n */\n\n\nproto.AttendanceRecord.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f =\n  /** @type {string} */\n  jspb.Message.getField(message, 1);\n\n  if (f != null) {\n    writer.writeString(1, f);\n  }\n\n  f =\n  /** @type {string} */\n  jspb.Message.getField(message, 2);\n\n  if (f != null) {\n    writer.writeString(2, f);\n  }\n\n  f =\n  /** @type {string} */\n  jspb.Message.getField(message, 3);\n\n  if (f != null) {\n    writer.writeString(3, f);\n  }\n};\n/**\n * required string room = 1;\n * @return {string}\n */\n\n\nproto.AttendanceRecord.prototype.getRoom = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.AttendanceRecord.prototype.setRoom = function (value) {\n  jspb.Message.setField(this, 1, value);\n};\n\nproto.AttendanceRecord.prototype.clearRoom = function () {\n  jspb.Message.setField(this, 1, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\n\n\nproto.AttendanceRecord.prototype.hasRoom = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * required string finger_id = 2;\n * @return {string}\n */\n\n\nproto.AttendanceRecord.prototype.getFingerId = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.AttendanceRecord.prototype.setFingerId = function (value) {\n  jspb.Message.setField(this, 2, value);\n};\n\nproto.AttendanceRecord.prototype.clearFingerId = function () {\n  jspb.Message.setField(this, 2, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\n\n\nproto.AttendanceRecord.prototype.hasFingerId = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n/**\n * optional string student_id = 3;\n * @return {string}\n */\n\n\nproto.AttendanceRecord.prototype.getStudentId = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 3, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.AttendanceRecord.prototype.setStudentId = function (value) {\n  jspb.Message.setField(this, 3, value);\n};\n\nproto.AttendanceRecord.prototype.clearStudentId = function () {\n  jspb.Message.setField(this, 3, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\n\n\nproto.AttendanceRecord.prototype.hasStudentId = function () {\n  return jspb.Message.getField(this, 3) != null;\n};\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.AttendanceResponse = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.AttendanceResponse, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  proto.AttendanceResponse.displayName = 'proto.AttendanceResponse';\n}\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto suitable for use in Soy templates.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n   *     for transitional soy proto support: http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.AttendanceResponse.prototype.toObject = function (opt_includeInstance) {\n    return proto.AttendanceResponse.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Whether to include the JSPB\n   *     instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.AttendanceResponse} msg The msg instance to transform.\n   * @return {!Object}\n   */\n\n\n  proto.AttendanceResponse.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      status: jspb.Message.getField(msg, 1)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.AttendanceResponse}\n */\n\n\nproto.AttendanceResponse.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.AttendanceResponse();\n  return proto.AttendanceResponse.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.AttendanceResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.AttendanceResponse}\n */\n\n\nproto.AttendanceResponse.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {number} */\n        reader.readInt32();\n        msg.setStatus(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.AttendanceResponse.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.AttendanceResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.AttendanceResponse} message\n * @param {!jspb.BinaryWriter} writer\n */\n\n\nproto.AttendanceResponse.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f =\n  /** @type {number} */\n  jspb.Message.getField(message, 1);\n\n  if (f != null) {\n    writer.writeInt32(1, f);\n  }\n};\n/**\n * required int32 status = 1;\n * @return {number}\n */\n\n\nproto.AttendanceResponse.prototype.getStatus = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 1, 0)\n  );\n};\n/** @param {number} value */\n\n\nproto.AttendanceResponse.prototype.setStatus = function (value) {\n  jspb.Message.setField(this, 1, value);\n};\n\nproto.AttendanceResponse.prototype.clearStatus = function () {\n  jspb.Message.setField(this, 1, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\n\n\nproto.AttendanceResponse.prototype.hasStatus = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n\ngoog.object.extend(exports, proto);","map":{"version":3,"sources":["/home/aditya/Projects/AttendanceSystem/app-frontend/src/AttendancePodsInterface_pb.js"],"names":["jspb","require","goog","global","Function","exportSymbol","proto","RegisterRoomRequest","opt_data","Message","initialize","inherits","DEBUG","COMPILED","displayName","GENERATE_TO_OBJECT","prototype","toObject","opt_includeInstance","includeInstance","msg","f","obj","room","getField","$jspbMessageInstance","deserializeBinary","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","field","getFieldNumber","value","readString","setRoom","skipField","serializeBinary","writer","BinaryWriter","serializeBinaryToWriter","getResultBuffer","message","undefined","writeString","getRoom","getFieldWithDefault","setField","clearRoom","hasRoom","RegisterRoomResponse","status","readInt32","setStatus","writeInt32","getStatus","clearStatus","hasStatus","RecordsRequest","RecordsResponse","repeatedFields_","studentsList","toObjectList","getStudentsList","Student","readMessage","addStudents","length","writeRepeatedMessage","getRepeatedWrapperField","setStudentsList","setRepeatedWrapperField","opt_value","opt_index","addToRepeatedWrapperField","clearStudentsList","studentId","name","setStudentId","setName","getStudentId","clearStudentId","hasStudentId","getName","clearName","hasName","AttendanceRecord","fingerId","setFingerId","getFingerId","clearFingerId","hasFingerId","AttendanceResponse","object","extend","exports"],"mappings":"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","sourcesContent":["/**\n * @fileoverview\n * @enhanceable\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\ngoog.exportSymbol('proto.AttendanceRecord', null, global);\ngoog.exportSymbol('proto.AttendanceResponse', null, global);\ngoog.exportSymbol('proto.RecordsRequest', null, global);\ngoog.exportSymbol('proto.RecordsResponse', null, global);\ngoog.exportSymbol('proto.RegisterRoomRequest', null, global);\ngoog.exportSymbol('proto.RegisterRoomResponse', null, global);\ngoog.exportSymbol('proto.Student', null, global);\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.RegisterRoomRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.RegisterRoomRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.RegisterRoomRequest.displayName = 'proto.RegisterRoomRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.RegisterRoomRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.RegisterRoomRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.RegisterRoomRequest} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.RegisterRoomRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    room: jspb.Message.getField(msg, 1)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.RegisterRoomRequest}\n */\nproto.RegisterRoomRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.RegisterRoomRequest;\n  return proto.RegisterRoomRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.RegisterRoomRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.RegisterRoomRequest}\n */\nproto.RegisterRoomRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRoom(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.RegisterRoomRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.RegisterRoomRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.RegisterRoomRequest} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.RegisterRoomRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {string} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * required string room = 1;\n * @return {string}\n */\nproto.RegisterRoomRequest.prototype.getRoom = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.RegisterRoomRequest.prototype.setRoom = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\nproto.RegisterRoomRequest.prototype.clearRoom = function() {\n  jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.RegisterRoomRequest.prototype.hasRoom = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.RegisterRoomResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.RegisterRoomResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.RegisterRoomResponse.displayName = 'proto.RegisterRoomResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.RegisterRoomResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.RegisterRoomResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.RegisterRoomResponse} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.RegisterRoomResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    status: jspb.Message.getField(msg, 1)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.RegisterRoomResponse}\n */\nproto.RegisterRoomResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.RegisterRoomResponse;\n  return proto.RegisterRoomResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.RegisterRoomResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.RegisterRoomResponse}\n */\nproto.RegisterRoomResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setStatus(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.RegisterRoomResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.RegisterRoomResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.RegisterRoomResponse} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.RegisterRoomResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {number} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * required int32 status = 1;\n * @return {number}\n */\nproto.RegisterRoomResponse.prototype.getStatus = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.RegisterRoomResponse.prototype.setStatus = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\nproto.RegisterRoomResponse.prototype.clearStatus = function() {\n  jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.RegisterRoomResponse.prototype.hasStatus = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.RecordsRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.RecordsRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.RecordsRequest.displayName = 'proto.RecordsRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.RecordsRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.RecordsRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.RecordsRequest} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.RecordsRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    room: jspb.Message.getField(msg, 1)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.RecordsRequest}\n */\nproto.RecordsRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.RecordsRequest;\n  return proto.RecordsRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.RecordsRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.RecordsRequest}\n */\nproto.RecordsRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRoom(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.RecordsRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.RecordsRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.RecordsRequest} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.RecordsRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {string} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * required string room = 1;\n * @return {string}\n */\nproto.RecordsRequest.prototype.getRoom = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.RecordsRequest.prototype.setRoom = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\nproto.RecordsRequest.prototype.clearRoom = function() {\n  jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.RecordsRequest.prototype.hasRoom = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.RecordsResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.RecordsResponse.repeatedFields_, null);\n};\ngoog.inherits(proto.RecordsResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.RecordsResponse.displayName = 'proto.RecordsResponse';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.RecordsResponse.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.RecordsResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.RecordsResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.RecordsResponse} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.RecordsResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    studentsList: jspb.Message.toObjectList(msg.getStudentsList(),\n    proto.Student.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.RecordsResponse}\n */\nproto.RecordsResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.RecordsResponse;\n  return proto.RecordsResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.RecordsResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.RecordsResponse}\n */\nproto.RecordsResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.Student;\n      reader.readMessage(value,proto.Student.deserializeBinaryFromReader);\n      msg.addStudents(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.RecordsResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.RecordsResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.RecordsResponse} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.RecordsResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getStudentsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.Student.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated Student students = 1;\n * If you change this array by adding, removing or replacing elements, or if you\n * replace the array itself, then you must call the setter to update it.\n * @return {!Array.<!proto.Student>}\n */\nproto.RecordsResponse.prototype.getStudentsList = function() {\n  return /** @type{!Array.<!proto.Student>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.Student, 1));\n};\n\n\n/** @param {!Array.<!proto.Student>} value */\nproto.RecordsResponse.prototype.setStudentsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.Student=} opt_value\n * @param {number=} opt_index\n * @return {!proto.Student}\n */\nproto.RecordsResponse.prototype.addStudents = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.Student, opt_index);\n};\n\n\nproto.RecordsResponse.prototype.clearStudentsList = function() {\n  this.setStudentsList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.Student = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.Student, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.Student.displayName = 'proto.Student';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.Student.prototype.toObject = function(opt_includeInstance) {\n  return proto.Student.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.Student} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.Student.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    studentId: jspb.Message.getField(msg, 1),\n    name: jspb.Message.getField(msg, 2)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Student}\n */\nproto.Student.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Student;\n  return proto.Student.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Student} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Student}\n */\nproto.Student.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStudentId(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.Student.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.Student.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Student} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.Student.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {string} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 2));\n  if (f != null) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * required string student_id = 1;\n * @return {string}\n */\nproto.Student.prototype.getStudentId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.Student.prototype.setStudentId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\nproto.Student.prototype.clearStudentId = function() {\n  jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.Student.prototype.hasStudentId = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * required string name = 2;\n * @return {string}\n */\nproto.Student.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.Student.prototype.setName = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\nproto.Student.prototype.clearName = function() {\n  jspb.Message.setField(this, 2, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.Student.prototype.hasName = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.AttendanceRecord = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.AttendanceRecord, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.AttendanceRecord.displayName = 'proto.AttendanceRecord';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.AttendanceRecord.prototype.toObject = function(opt_includeInstance) {\n  return proto.AttendanceRecord.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.AttendanceRecord} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.AttendanceRecord.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    room: jspb.Message.getField(msg, 1),\n    fingerId: jspb.Message.getField(msg, 2),\n    studentId: jspb.Message.getField(msg, 3)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.AttendanceRecord}\n */\nproto.AttendanceRecord.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.AttendanceRecord;\n  return proto.AttendanceRecord.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.AttendanceRecord} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.AttendanceRecord}\n */\nproto.AttendanceRecord.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRoom(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setFingerId(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStudentId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.AttendanceRecord.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.AttendanceRecord.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.AttendanceRecord} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.AttendanceRecord.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {string} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 2));\n  if (f != null) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 3));\n  if (f != null) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * required string room = 1;\n * @return {string}\n */\nproto.AttendanceRecord.prototype.getRoom = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.AttendanceRecord.prototype.setRoom = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\nproto.AttendanceRecord.prototype.clearRoom = function() {\n  jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.AttendanceRecord.prototype.hasRoom = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * required string finger_id = 2;\n * @return {string}\n */\nproto.AttendanceRecord.prototype.getFingerId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.AttendanceRecord.prototype.setFingerId = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\nproto.AttendanceRecord.prototype.clearFingerId = function() {\n  jspb.Message.setField(this, 2, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.AttendanceRecord.prototype.hasFingerId = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional string student_id = 3;\n * @return {string}\n */\nproto.AttendanceRecord.prototype.getStudentId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/** @param {string} value */\nproto.AttendanceRecord.prototype.setStudentId = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\nproto.AttendanceRecord.prototype.clearStudentId = function() {\n  jspb.Message.setField(this, 3, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.AttendanceRecord.prototype.hasStudentId = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.AttendanceResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.AttendanceResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.AttendanceResponse.displayName = 'proto.AttendanceResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.AttendanceResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.AttendanceResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.AttendanceResponse} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.AttendanceResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    status: jspb.Message.getField(msg, 1)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.AttendanceResponse}\n */\nproto.AttendanceResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.AttendanceResponse;\n  return proto.AttendanceResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.AttendanceResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.AttendanceResponse}\n */\nproto.AttendanceResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setStatus(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.AttendanceResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.AttendanceResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.AttendanceResponse} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.AttendanceResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {number} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * required int32 status = 1;\n * @return {number}\n */\nproto.AttendanceResponse.prototype.getStatus = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.AttendanceResponse.prototype.setStatus = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\nproto.AttendanceResponse.prototype.clearStatus = function() {\n  jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.AttendanceResponse.prototype.hasStatus = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\ngoog.object.extend(exports, proto);\n"]},"metadata":{},"sourceType":"module"}